# This file defines a 2-tier architecture using the standardized 'entry-svc' name.
# 1. An 'entry' service that receives external traffic.
# 2. A 'backend' service that is only called by the entry service.

# --- ENTRYPOINT DEPLOYMENT ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: entry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: entry
  template:
    metadata:
      labels:
        app: entry
    spec:
      containers:
      - name: app
        # Make sure this is the correct name of your image
        image: rpizziol/generic-microservice-tester:latest
        ports:
        - containerPort: 8080
        env:
        - name: SERVICE_NAME
          value: "entry-svc"
        - name: SERVICE_TIME_SECONDS
          value: "0.05" # Entry service simulates a small amount of work, 50ms
        - name: OUTBOUND_CALLS
          # Always makes a synchronous call to the 'backend-svc' service
          value: "SYNC:backend-svc:1.0"
        - name: GUNICORN_WORKERS
          value: "2"
        - name: GUNICORN_THREADS
          value: "4"

---
# --- ENTRYPOINT SERVICE ---
apiVersion: v1
kind: Service
metadata:
  name: entry-svc
spec:
  selector:
    app: entry
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080

---
# --- BACKEND DEPLOYMENT ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: app
        image: rpizziol/generic-microservice-tester:latest
        ports:
        - containerPort: 8080
        env:
        - name: SERVICE_NAME
          value: "backend"
        - name: SERVICE_TIME_SECONDS
          value: "0.2" # Backend simulates more work, 200ms
        - name: OUTBOUND_CALLS
          value: "" # This service calls no other services
        - name: GUNICORN_WORKERS
          value: "2"
        - name: GUNICORN_THREADS
          value: "4"

---
# --- BACKEND SERVICE ---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
spec:
  selector:
    app: backend
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080

